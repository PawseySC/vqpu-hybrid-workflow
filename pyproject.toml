[tool.poetry]
name = "Hybrid-QGCPUs"
version = "0.1"
description = "Example hybrid workflow for running (v)QPUs, GPUs and CPUs"
authors = ["pelahi <pascal.elahi@pawsey.org.au>"]
license = "MIT"
readme = "README.md"
include = [
    {path = 'workflow/vqpucommon'},
    {path = 'workflow/clusters'},
]

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.26.0"
pydantic = "2.8.2" # version 2.9.0 caused prefect model validation error
scipy = "*"
spython = "^0.3.1"
fixms = ">=0.2.6"
matplotlib = "*"
prefect = "^2.10.0"
prefect-dask = "^0.2.4"
dask-jobqueue = "*"
scikit-image = "*"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.4.1"
isort = "^5.12.0"
pre-commit = "*"
ruff = "^0.1.12"
sphinx = "*"

[tool.poetry.extras]
dev = [
    "black",
    "mypy",
    "isort",
    "pre-commit",
    "ruff",
    "pytest",
    "pytest-cov",
    "sphinx",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
vqpu_test = "workflow.vqpu_test_workflow:cli"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
